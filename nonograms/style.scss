:root {
  --cellwrapcount: 1;
}

$widthCell: 30px;
$mainColor: rgb(49, 49, 51);
$wrapColor: #e8f3f8;
$cellColorBorder: rgb(215, 215, 215);
$hintBlockColor: rgb(255, 255, 255);
$clickColorWrong: rgb(249, 98, 98);
$border: 1px solid $mainColor;
$borderBold: 2px solid $mainColor;
$borderWrong: 1px solid $clickColorWrong;

@mixin borderCellHint {
  border: $borderBold;

  .hints {
    display: flex;
    justify-content: flex-end;
    @content;

    & > * {
      width: $widthCell;
      height: $widthCell;
      border: 1px solid $cellColorBorder;
      cursor: pointer;
      display: flex;
      justify-content: center;
      align-items: center;

      &:hover {
        color: #f94141;
      }
    }
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  height: 100vh;
  font-family: 'Courier New', Courier, monospace;
}

.main {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
}
.wrap {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
}

.game-btns {
  display: flex;
  gap: 10px;

  & > * {
    border-radius: 5px;
    padding: 10px;

    border: 1px solid $cellColorBorder;
    outline: none;
    cursor: pointer;
    background-color: transparent;

    &:hover {
      border: $border;
    }
  }

  .reset {
    color: aliceblue;
    border: none;
    background-color: $clickColorWrong;

    &:hover {
      background-color: #f94141;
    }
  }
}

.wrap-game {
  display: flex;
  justify-content: flex-end;
  padding: 10px;
  background-color: $wrapColor;
}

.select-style {
  width: 90%;
  align-self: flex-start;
  font-family: 'Courier New', Courier, monospace;
  outline: none;
  border-radius: 5px;
  background-color: $hintBlockColor;
}

.block-right {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
}

.block-left {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 8px;
}

.wrap-select {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  gap: 7px;
}

// HINT LEFT

.hint-left {
  align-self: flex-end;
  background-color: $hintBlockColor;
}

.wrap-hint-left {
  @include borderCellHint() {
    height: $widthCell;
    border-right: none;
    border-left: none;
  }
}

// HINT TOP

.hint-top {
  display: flex;
  background-color: $hintBlockColor;
}

.wrap-hint-top {
  display: flex;

  @include borderCellHint {
    flex-direction: column;
    width: $widthCell;
    border-top: none;
    border-bottom: none;
  }
}

// GAME

.game {
  background-color: $hintBlockColor;

  display: grid;
  grid-template-columns: repeat(var(--cellWrapCount), 1fr);
}

.cell-wrap {
  border: $borderBold;
  display: grid;
  grid-template-columns: repeat(5, 1fr);
}

.cell {
  cursor: pointer;
  width: $widthCell;
  height: $widthCell;
  border: 1px solid $cellColorBorder;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 25px;
  color: $clickColorWrong;

  &:hover {
    border-color: $mainColor;
  }
}

.active {
  background-color: $mainColor;
  border: $border;

  &:hover {
    border: 1px solid $cellColorBorder;
  }
}

.mark-wrong::before {
  content: 'x';
}

.mark-wrong:hover {
  border: $borderWrong;
}

.hint-done {
  color: $cellColorBorder;
}
