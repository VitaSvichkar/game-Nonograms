import { fillField } from './fillField.js';
import { returnTime } from './returnTime.js';
import { updateTable } from './updateTable.js';
import { showHints } from './showHints.js';
import { sort } from './sort.js';
import { updateSelect } from './updateSelect.js';

export const game = {
  state: {
    cellsInRow: 5,
    cellWrapInRow: null,
    curSize: null,
    curName: null,
    curGame: null,
    valuesGameNames5: null,
    valuesGameNames10: null,
    valuesGameNames15: null,
    data: [],
    gameState: [],
    CONTINUE_GAME: 'continue-game',
    SAVE_GAME: 'save game',
    minutes: 0,
    seconds: 0,
    saveMin: 0,
    saveSec: 0,
    saveBtnText: null,
  },

  initDOM() {
    console.log('initDOM');
    return (this.domElem = {
      gameBlock: document.querySelector('.game'),
      selectNames: document.querySelector('.select-names'),
      selectSizes: document.querySelector('.select-sizes'),
      hintLeft: document.querySelector('.hint-left'),
      hintTop: document.querySelector('.hint-top'),
      overlay: document.querySelector('.overlay'),
      modalTextResult: document.querySelector('.modal-text-result'),
      timer: document.querySelector('.timer'),
      btnTheme: document.querySelector('.theme'),
      btnReset: document.querySelector('.reset'),
      btnRandom: document.querySelector('.random-btn'),
      modalCloseIco: document.querySelector('.modal-close'),
      btnSolution: document.querySelector('.solution-btn'),
      btnSaveGame: document.querySelector('.btn-save'),
      rulesModal: document.querySelector('.wrap-rules'),
      btnCloseRules: document.querySelector('.rules button'),
    });
  },

  domElem: null,

  checkResultGame() {
    const solution = this.state.curGame.solution;
    const gameState = this.state.gameState;
    console.log(solution, gameState);
    for (let i = 0; i < solution.length; i += 1) {
      if (gameState[i] === 'x') {
        continue;
      }

      if (solution[i] !== gameState[i]) {
        return false;
      }
    }

    return true;
  },

  chooseSize(val, name) {
    this.state.curSize = val;
    this.state.cellWrapInRow = val / this.state.cellsInRow;
    this.domElem.gameBlock.style.setProperty(
      '--cellWrapCount',
      this.state.cellWrapInRow
    );
    console.log(this.state.curName);
    const keyNames = `valuesGameNames${this.state.curSize}`;
    const arrNames = this.state[keyNames];

    this.state.curName = name ? name : arrNames[0];
    updateSelect(arrNames, this.domElem.selectNames);
  },

  updateGame() {
    const time = returnTime();
    this.domElem.timer.innerText = time;

    this.state.curGame = this.variants[`size${this.state.curSize}`].find(
      (el) => el.name === this.state.curName
    );

    fillField();
    showHints();
  },

  updateGameState(ind) {
    switch (this.state.gameState[ind]) {
      case 0:
        this.state.gameState[ind] = 1;
        break;
      case 1:
        this.state.gameState[ind] = 0;
        break;
      case 'x':
        this.state.gameState[ind] = 'x';
    }
  },

  saveDataLocalStorage() {
    const time = returnTime();

    this.state.data.push({
      name: this.state.curName,
      level: `${this.state.curSize}x${this.state.curSize}`,
      time: time,
    });

    if (this.state.data.length > 5) {
      this.state.data.shift();
    }

    const sortData = sort(this.state.data);
    localStorage.setItem('recordsNonograms', JSON.stringify(sortData));

    updateTable(this.state);
  },

  getVariants() {
    return [
      ...this.variants.size5,
      ...this.variants.size10,
      ...this.variants.size15,
    ];
  },

  variants: {
    size5: [
      {
        name: 'smile',
        hintTop: [
          [2, 1],
          [2, 1],
          [0, 1],
          [2, 1],
          [2, 1],
        ],
        hintLeft: [
          [2, 2],
          [2, 2],
          [0, 0],
          [1, 1],
          [0, 3],
        ],
        // prettier-ignore
        solution: [
          1, 1, 0, 1, 1,
          1, 1, 0, 1, 1,
          0, 0, 0, 0, 0,
          1, 0, 0, 0, 1,
          0, 1, 1, 1, 0,
        ],
      },

      {
        name: 'snake',
        hintTop: [
          [0, 3],
          [1, 2],
          [0, 1],
          [1, 1],
          [0, 1],
        ],
        hintLeft: [
          [0, 0],
          [2, 1],
          [0, 1],
          [0, 2],
          [0, 4],
        ],
        // prettier-ignore
        solution: [
          0, 0, 0, 0, 0,
          1, 1, 0, 1, 0,
          1, 0, 0, 0, 0,
          1, 1, 0, 0, 0,
          0, 1, 1, 1, 1,
        ],
      },

      {
        name: 'flag',
        hintTop: [
          [0, 1],
          [0, 1],
          [0, 5],
          [2, 1],
          [2, 1],
        ],
        hintLeft: [
          [0, 3],
          [0, 3],
          [0, 1],
          [0, 1],
          [0, 5],
        ],
        // prettier-ignore
        solution: [
          0, 0, 1, 1, 1,
          0, 0, 1, 1, 1,
          0, 0, 1, 0, 0,
          0, 0, 1, 0, 0,
          1, 1, 1, 1, 1,
        ],
      },

      {
        name: 'aim',
        hintTop: [
          [1, 1, 1],
          [0, 0, 3],
          [0, 2, 2],
          [0, 0, 3],
          [1, 1, 1],
        ],
        hintLeft: [
          [1, 1, 1],
          [0, 0, 3],
          [0, 2, 2],
          [0, 0, 3],
          [1, 1, 1],
        ],
        // prettier-ignore
        solution: [
          1, 0, 1, 0, 1,
          0, 1, 1, 1, 0,
          1, 1, 0, 1, 1,
          0, 1, 1, 1, 0,
          1, 0, 1, 0, 1,
        ],
      },

      {
        name: 'mushroom',
        hintTop: [[1], [2], [5], [2], [1]],
        hintLeft: [[1], [3], [5], [1], [1]],
        // prettier-ignore
        solution: [
          0, 0, 1, 0, 0,
          0, 1, 1, 1, 0,
          1, 1, 1, 1, 1,
          0, 0, 1, 0, 0,
          0, 0, 1, 0, 0,
        ],
      },
    ],

    size10: [
      {
        name: 'tea',
        hintTop: [
          [0, 0, 1],
          [0, 5, 1],
          [0, 2, 7],
          [0, 1, 4],
          [0, 2, 7],
          [0, 0, 7],
          [0, 2, 7],
          [0, 5, 1],
          [1, 1, 1],
          [0, 2, 1],
        ],

        hintLeft: [
          [1, 1, 1],
          [1, 1, 1],
          [0, 0, 0],
          [0, 0, 7],
          [0, 2, 6],
          [2, 4, 1],
          [0, 0, 8],
          [0, 0, 7],
          [1, 5, 1],
          [0, 0, 8],
        ],
        // prettier-ignore
        solution: [
          0,0,1,0,1,
          0,0,1,0,1,
          0,0,0,0,0,
          0,1,1,1,1,
          0,1,1,0,1,
                    0,1,0,0,0,
                    0,1,0,0,0,
                    0,0,0,0,0,
                    1,1,1,0,0,
                    1,1,1,1,1,
          0,1,1,0,1,
          0,1,1,1,1,
          0,1,1,1,1,
          1,0,1,1,1,
          0,1,1,1,1,
                    1,1,1,0,1,
                    1,1,1,1,0,
                    1,1,1,0,0,
                    1,1,0,0,1,
                    1,1,1,1,0,
        ],
      },

      {
        name: 'cherry',
        hintTop: [
          [0, 0, 0, 1],
          [0, 0, 2, 3],
          [0, 1, 1, 5],
          [0, 0, 2, 5],
          [0, 2, 2, 2],
          [0, 0, 5, 3],
          [1, 1, 1, 1],
          [0, 1, 1, 5],
          [0, 2, 2, 2],
          [0, 0, 1, 3],
        ],
        hintLeft: [
          [0, 0, 0, 3],
          [0, 0, 4, 1],
          [1, 1, 2, 1],
          [0, 3, 1, 3],
          [0, 0, 0, 1],
          [0, 0, 3, 3],
          [0, 0, 5, 3],
          [3, 1, 1, 1],
          [0, 0, 5, 3],
          [0, 0, 3, 3],
        ],
        // prettier-ignore
        solution: [
          0,0,0,0,1,
          0,0,1,1,1,
          0,1,0,1,0,
          1,1,1,0,0,
          0,0,0,0,0,
                    1,1,0,0,0,
                    1,0,1,0,0,
                    1,1,0,1,0,
                    1,0,1,1,1,
                    1,0,0,0,0,
          0,0,1,1,1,
          0,1,1,1,1,
          0,1,1,1,0,
          0,1,1,1,1,
          0,0,1,1,1,
                    0,1,1,1,0,
                    1,0,1,1,1,
                    1,0,1,0,1,
                    1,0,1,1,1,
                    0,1,1,1,0,
        ],
      },

      {
        name: 'balloon',
        hintTop: [
          [0, 10],
          [0, 10],
          [1, 6],
          [0, 5],
          [1, 1],
          [0, 1],
          [1, 1],
          [2, 5],
          [1, 6],
          [0, 10],
        ],
        hintLeft: [
          [0, 3, 2],
          [2, 1, 1],
          [2, 1, 1],
          [0, 2, 1],
          [0, 3, 2],
          [0, 4, 3],
          [0, 5, 4],
          [0, 4, 3],
          [0, 4, 3],
          [0, 0, 10],
        ],
        // prettier-ignore
        solution: [
         1,1,1,0,0,
         1,1,0,0,0,
         1,1,0,0,0,
         1,1,0,0,0,
         1,1,1,0,0,
                  0,0,0,1,1,
                  0,0,1,0,1,
                  0,0,1,0,1,
                  0,0,0,0,1,
                  0,0,0,1,1,
         1,1,1,1,0,
         1,1,1,1,1,
         1,1,1,1,0,
         1,1,1,1,0,
         1,1,1,1,1,
                  0,0,1,1,1,
                  0,1,1,1,1,
                  0,0,1,1,1,
                  0,0,1,1,1,
                  1,1,1,1,1,
        ],
      },

      {
        name: 'tv',
        hintTop: [
          [0, 0, 7],
          [1, 1, 4],
          [0, 1, 7],
          [0, 3, 2],
          [0, 1, 1],
          [0, 1, 1],
          [0, 2, 1],
          [1, 1, 1],
          [0, 2, 3],
          [0, 0, 7],
        ],
        hintLeft: [
          [0, 1, 1],
          [0, 1, 1],
          [0, 0, 10],
          [1, 2, 2],
          [0, 3, 1],
          [1, 1, 1],
          [0, 3, 1],
          [0, 4, 2],
          [0, 0, 10],
          [0, 1, 1],
        ],
        // prettier-ignore
        solution: [
          0,0,1,0,0,
          0,0,0,1,0,
          1,1,1,1,1,
          1,0,1,1,0,
          1,1,1,0,0,
                    0,0,1,0,0,
                    0,1,0,0,0,
                    1,1,1,1,1,
                    0,0,0,1,1,
                    0,0,0,0,1,
          1,0,1,0,0,
          1,1,1,0,0,
          1,1,1,1,0,
          1,1,1,1,1,
          0,1,0,0,0,
                    0,0,0,0,1,
                    0,0,0,0,1,
                    0,0,0,1,1,
                    1,1,1,1,1,
                    0,0,0,1,0,
        ],
      },

      {
        name: 'watch',
        hintTop: [
          [0, 0, 2],
          [0, 2, 4],
          [1, 6, 1],
          [0, 5, 3],
          [0, 4, 3],
          [0, 1, 4],
          [0, 0, 9],
          [1, 6, 1],
          [0, 2, 4],
          [0, 0, 2],
        ],
        hintLeft: [
          [0, 0, 2, 2],
          [0, 2, 4, 2],
          [1, 3, 2, 1],
          [0, 0, 4, 3],
          [0, 0, 4, 3],
          [0, 0, 3, 4],
          [0, 0, 2, 5],
          [0, 0, 0, 6],
          [0, 0, 0, 4],
          [0, 0, 2, 2],
        ],
        // prettier-ignore
        solution: [
          0,1,1,0,0,
          1,1,0,1,1,
          1,0,1,1,1,
          0,1,1,1,1,
          0,1,1,1,1,
                    0,0,1,1,0,
                    1,1,0,1,1,
                    0,1,1,0,1,
                    0,1,1,1,0,
                    0,1,1,1,0,
          0,1,1,1,0,
          0,1,1,0,1,
          0,0,1,1,1,
          0,0,0,1,1,
          0,0,1,1,0,
                    1,1,1,1,0,
                    1,1,1,1,0,
                    1,1,1,0,0,
                    1,1,0,0,0,
                    0,1,1,0,0,
        ],
      },
    ],

    size15: [
      {
        name: 'fish',
        hintTop: [
          [0, 0, 2],
          [0, 0, 4],
          [0, 2, 2],
          [0, 0, 7],
          [1, 3, 2],
          [0, 3, 3],
          [0, 0, 10],
          [0, 0, 12],
          [0, 0, 13],
          [4, 6, 3],
          [2, 4, 2],
          [1, 2, 1],
          [0, 0, 4],
          [0, 0, 8],
          [0, 4, 5],
        ],
        hintLeft: [
          [0, 0, 3],
          [0, 3, 1],
          [0, 3, 1],
          [0, 5, 2],
          [0, 6, 3],
          [2, 6, 2],
          [0, 4, 8],
          [2, 2, 8],
          [5, 5, 2],
          [3, 5, 2],
          [0, 7, 2],
          [0, 5, 1],
          [0, 4, 1],
          [0, 0, 4],
          [0, 0, 3],
        ],

        solution: [
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
          1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1,
          1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
          1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1,
          0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1,
          1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0,
          0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
        ],
      },

      {
        name: 'giraffe',
        hintTop: [
          [0, 0, 3],
          [0, 0, 4],
          [1, 4, 3],
          [0, 1, 4],
          [0, 7, 5],
          [0, 2, 4],
          [0, 4, 4],
          [0, 2, 6],
          [0, 0, 4],
          [1, 4, 3],
          [0, 1, 4],
          [0, 7, 2],
          [2, 4, 1],
          [4, 3, 1],
          [0, 2, 7],
        ],
        hintLeft: [
          [0, 1, 1, 1, 1],
          [0, 1, 3, 1, 3],
          [0, 0, 0, 5, 5],
          [0, 1, 2, 1, 2],
          [0, 0, 0, 1, 1],
          [0, 0, 0, 2, 2],
          [0, 0, 0, 2, 2],
          [0, 0, 0, 2, 2],
          [0, 0, 2, 2, 1],
          [0, 0, 3, 4, 3],
          [0, 0, 3, 6, 4],
          [0, 0, 2, 5, 4],
          [0, 2, 6, 1, 1],
          [1, 2, 1, 1, 1],
          [1, 1, 1, 1, 3],
        ],

        solution: [
          0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0,
          0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0,
          0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1,
          1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0,
          1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
          0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0,
          0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0,
          1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 1,
          1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1,
        ],
      },

      {
        name: 'deer',
        hintTop: [
          [0, 0, 2],
          [0, 3, 3],
          [2, 2, 2],
          [0, 4, 6],
          [0, 5, 7],
          [0, 2, 7],
          [3, 1, 4],
          [0, 0, 7],
          [0, 2, 4],
          [2, 6, 2],
          [0, 0, 12],
          [0, 0, 15],
          [0, 4, 10],
          [0, 1, 9],
          [0, 4, 8],
        ],
        hintLeft: [
          [0, 0, 2, 2, 2, 1],
          [2, 2, 1, 1, 2, 1],
          [0, 4, 1, 1, 2, 1],
          [0, 0, 0, 0, 5, 5],
          [0, 0, 0, 0, 2, 5],
          [0, 0, 0, 0, 0, 7],
          [0, 0, 0, 1, 1, 5],
          [0, 0, 0, 0, 0, 11],
          [0, 0, 0, 0, 0, 12],
          [0, 0, 0, 0, 0, 13],
          [0, 0, 0, 0, 8, 5],
          [0, 0, 0, 1, 3, 5],
          [0, 0, 0, 0, 5, 5],
          [0, 0, 0, 0, 3, 6],
          [0, 0, 0, 0, 0, 6],
        ],

        solution: [
          1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1,
          0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1,
          1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
          0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0,
          1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        ],
      },

      {
        name: 'house',
        hintTop: [
          [0, 0, 0, 1, 1],
          [0, 0, 0, 0, 8],
          [0, 0, 0, 3, 1],
          [0, 0, 4, 2, 1],
          [0, 0, 7, 2, 1],
          [0, 1, 4, 2, 1],
          [0, 0, 0, 4, 1],
          [0, 0, 1, 2, 4],
          [0, 0, 2, 1, 4],
          [0, 0, 3, 2, 1],
          [0, 4, 1, 2, 1],
          [1, 1, 2, 2, 1],
          [0, 1, 1, 1, 1],
          [0, 0, 0, 0, 8],
          [0, 0, 1, 1, 1],
        ],
        hintLeft: [
          [0, 0, 0, 0, 1],
          [0, 0, 0, 0, 2],
          [0, 0, 0, 0, 1],
          [0, 0, 0, 2, 2],
          [0, 0, 0, 1, 2],
          [0, 0, 0, 0, 9],
          [0, 5, 1, 1, 1],
          [0, 7, 1, 1, 1],
          [0, 0, 0, 0, 15],
          [0, 0, 0, 1, 1],
          [0, 1, 3, 2, 1],
          [1, 3, 2, 2, 1],
          [0, 0, 1, 2, 1],
          [0, 0, 1, 2, 1],
          [0, 0, 0, 0, 15],
        ],

        solution: [
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0,
          0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
          0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1,
          1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0,
          1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0,
          1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1,
          0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
          0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1,
        ],
      },

      {
        name: 'clover',
        hintTop: [
          [0, 2, 2],
          [0, 0, 7],
          [0, 7, 2],
          [0, 7, 2],
          [3, 5, 1],
          [5, 3, 2],
          [6, 1, 2],
          [0, 6, 4],
          [0, 6, 1],
          [0, 5, 3],
          [0, 3, 5],
          [0, 0, 7],
          [0, 0, 7],
          [0, 0, 7],
          [0, 2, 2],
        ],
        hintLeft: [
          [0, 2, 2],
          [0, 0, 7],
          [0, 0, 7],
          [0, 0, 7],
          [3, 5, 3],
          [5, 3, 5],
          [6, 1, 6],
          [0, 6, 6],
          [6, 1, 6],
          [5, 1, 5],
          [3, 1, 3],
          [0, 0, 2],
          [0, 0, 2],
          [0, 0, 4],
          [0, 0, 2],
        ],

        solution: [
          0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 1,
          1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0,
          0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
          1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1,
          1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
          1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0,
          0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,
          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        ],
      },
    ],
  },
};

game.state.valuesGameNames5 = game.variants.size5.map((el) => el.name);
game.state.valuesGameNames10 = game.variants.size10.map((el) => el.name);
game.state.valuesGameNames15 = game.variants.size15.map((el) => el.name);
